Bottom: 2d45b255e05cc1ac4ad7776a6e2a2d3f313f79bc
Top:    6b02ad93a1218c6b2333862e6f32c2a5a9ca205c
Author: scott snyder <sss@karma>
Date:   2020-02-12 09:01:55 -0500

Refresh of warn

---

diff --git a/src/ForwardTracking/EndcapHit01.cc b/src/ForwardTracking/EndcapHit01.cc
index 144cc2f..7106eeb 100644
--- a/src/ForwardTracking/EndcapHit01.cc
+++ b/src/ForwardTracking/EndcapHit01.cc
@@ -76,14 +76,14 @@ EndcapHit01::EndcapHit01( TrackerHit* trackerHit , const SectorSystemEndcap* con
    radius = sqrt(radius);
       
    double _cosTheta = (pos[2]/radius);
-   double _phi = atan2(pos[1],pos[0]);
+   double phi = atan2(pos[1],pos[0]);
       
-   if (_phi < 0.) _phi = _phi + 2*M_PI;   
+   if (phi < 0.) phi = phi + 2*M_PI;   
 
    // YV, for debugging. Calculate sector here and not through the IVXHit base class
    //calculateSector();
 
-   _sector = _sectorSystemEndcap->getSector( _layer, _phi, _cosTheta );
+   _sector = _sectorSystemEndcap->getSector( _layer, phi, _cosTheta );
 
    
    //We assume a real hit. If it is virtual, this has to be set.
diff --git a/src/ForwardTracking/ForwardTracking.cc b/src/ForwardTracking/ForwardTracking.cc
index 09f18a9..c8df2c2 100644
--- a/src/ForwardTracking/ForwardTracking.cc
+++ b/src/ForwardTracking/ForwardTracking.cc
@@ -712,7 +712,7 @@ void ForwardTracking::processEvent( LCEvent * evt ) {
                else streamlog_out( DEBUG2 ) << "Keeping track because of good helix fit: chi2/ndf = " << chi2OverNdf << "\n";
                
             }
-            catch( FTDHelixFitterException e ){
+            catch( const FTDHelixFitterException& e ){
                
                
                streamlog_out( DEBUG3 ) << "Track rejected, because fit failed: " <<  e.what() << "\n";
@@ -752,7 +752,7 @@ void ForwardTracking::processEvent( LCEvent * evt ) {
                
                
             }
-            catch( FitterException e ){
+            catch( const FitterException& e ){
                
                
                streamlog_out( DEBUG3 ) << "Track rejected, because fit failed: " <<  e.what() << "\n";
@@ -916,7 +916,7 @@ void ForwardTracking::processEvent( LCEvent * evt ) {
                trkCol->addElement( trackImpl );
                
             }
-            catch( FitterException e ){
+            catch( const FitterException& e ){
                
                streamlog_out( DEBUG4 ) << "ForwardTracking: track couldn't be finalized due to fitter error: " << e.what() << "\n";
                delete trackImpl;
diff --git a/src/ForwardTracking/SiliconEndcapTracking.cc b/src/ForwardTracking/SiliconEndcapTracking.cc
index 18952e5..3e33900 100644
--- a/src/ForwardTracking/SiliconEndcapTracking.cc
+++ b/src/ForwardTracking/SiliconEndcapTracking.cc
@@ -778,7 +778,7 @@ void SiliconEndcapTracking::processEvent( LCEvent * evt ) {
                else streamlog_out( DEBUG2 ) << "Keeping track because of good helix fit: chi2/ndf = " << chi2OverNdf << "\n";
                
             }
-            catch( EndcapHelixFitterException e ){
+            catch( const EndcapHelixFitterException& e ){
                
                
                streamlog_out( DEBUG3 ) << "Track rejected, because fit failed: " <<  e.what() << "\n";
@@ -818,7 +818,7 @@ void SiliconEndcapTracking::processEvent( LCEvent * evt ) {
                
                
             }
-            catch( FitterException e ){
+            catch( const FitterException& e ){
                
                
                streamlog_out( DEBUG3 ) << "Track rejected, because fit failed: " <<  e.what() << "\n";
@@ -991,7 +991,7 @@ void SiliconEndcapTracking::processEvent( LCEvent * evt ) {
                trkCol->addElement( trackImpl );
                
             }
-            catch( FitterException e ){
+            catch( const FitterException& e ){
                
                streamlog_out( DEBUG4 ) << "SiliconEndcapTracking: track couldn't be finalized due to fitter error: " << e.what() << "\n";
                delete trackImpl;
diff --git a/src/TrackingFeedback/RecoTrack.cc b/src/TrackingFeedback/RecoTrack.cc
index c95a166..905ce86 100644
--- a/src/TrackingFeedback/RecoTrack.cc
+++ b/src/TrackingFeedback/RecoTrack.cc
@@ -66,7 +66,7 @@ std::string RecoTrack::getRecoTrackInfo() const{
       Fitter fitter( _track, _trkSystem );
       info << "Chi2Prob = " << fitter.getChi2Prob( lcio::TrackState::AtIP ) << "\n";
    }
-   catch( FitterException e ){
+   catch( const FitterException& e ){
       
       info << "Could not be fitted!!!\n";
       
diff --git a/src/TrackingFeedback/TrackingFeedbackProcessor.cc b/src/TrackingFeedback/TrackingFeedbackProcessor.cc
index c2d1c0d..1e3b8a1 100644
--- a/src/TrackingFeedback/TrackingFeedbackProcessor.cc
+++ b/src/TrackingFeedback/TrackingFeedbackProcessor.cc
@@ -335,7 +335,7 @@ void TrackingFeedbackProcessor::processEvent( LCEvent * evt ) {
       chi2Prob = fitter.getChi2Prob( lcio::TrackState::AtIP );
       
       }
-      catch( FitterException e ){
+      catch( const FitterException& e ){
          
          streamlog_out( DEBUG3 ) << "Monte Carlo Track " << i << " fit failed: " <<  e.what() << "\n";
          
@@ -858,7 +858,7 @@ void TrackingFeedbackProcessor::saveRootInformation(){
          _trueTrack_Ndf = fitter.getNdf( lcio::TrackState::AtIP );
          
       }
-      catch( FitterException e ){
+      catch( const FitterException& e ){
          
          _trueTrack_chi2prob = -1;
          _trueTrack_chi2 = -1;
@@ -903,7 +903,7 @@ void TrackingFeedbackProcessor::saveRootInformation(){
          _recoTrack_Ndf = fitter.getNdf( lcio::TrackState::AtIP );
          
       }
-      catch( FitterException e ){
+      catch( const FitterException& e ){
          
          _recoTrack_chi2prob = -1;
          _recoTrack_chi2 = -1;
diff --git a/src/TrackingFeedback/TrueTrack.cc b/src/TrackingFeedback/TrueTrack.cc
index e0f5f9c..24dddce 100644
--- a/src/TrackingFeedback/TrueTrack.cc
+++ b/src/TrackingFeedback/TrueTrack.cc
@@ -94,7 +94,7 @@ std::string TrueTrack::getTrueTrackInfo() const{
       << ", Ndf = " << fitter.getNdf( lcio::TrackState::AtIP ) << "\n";
       
    }
-   catch( FitterException e ){
+   catch( const FitterException& e ){
       
       trackInfo << "Could not be fitted!!!\n";
